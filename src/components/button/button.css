/* ================================== */
/* Component - Button                 */
/* ================================== */
button {
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  border: var(--border-width) solid transparent;
  line-height: 1;
  cursor: pointer;
  user-select: none;
  transition: all var(--animation-delay-200) var(--ease-in-out);
  box-sizing: border-box;
  flex-shrink: 0;
  gap: var(--spacing-2);
  height: var(--h, calc(var(--spacing-10) - var(--spacing-1)));
  padding: var(--spacing-2) var(--spacing-3);
  border-radius: var(--radius-md);
  background-color: var(--primary);
  color: var(--primary-foreground);
  box-shadow: var(--shadow-xs);
}

button svg {
  width: var(--wh, var(--size-icon-sm));
  height: var(--wh, var(--size-icon-sm));
  object-fit: contain;
  flex-shrink: 0;
}

button:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px var(--ring);
}

button:disabled {
  opacity: var(--opacity-50);
  cursor: not-allowed;
}

button:hover {
  background-color: var(--color-primary-hover);
}

button[variant="secondary"] {
  background-color: var(--secondary);
  color: var(--secondary-foreground);
  border-color: transparent;
}

button[variant="secondary"]:hover {
  background-color: var(--color-secondary-hover);
}

button[variant="outline"] {
  background-color: color-mix(in oklab, var(--primary) 10%, transparent);
  color: var(--foreground);
  border-color: var(--primary);
}

button[variant="outline"]:hover {
  background-color: color-mix(in oklab, var(--primary) 15%, transparent);
  color: var(--primary);
}

button[variant="ghost"] {
  background-color: transparent;
  color: var(--foreground);
  border-color: transparent;
  box-shadow: none;
}

button[variant="ghost"]:hover {
  background-color: var(--accent);
  color: var(--accent-foreground);
}

button[variant="ghost"]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px var(--ring);
}

button[variant="destructive"] {
  background-color: var(--destructive);
  color: var(--destructive-foreground);
  border-color: transparent;
}

button[variant="destructive"]:hover {
  background-color: var(--color-destructive-hover);
}

button[variant="link"] {
  background-color: transparent;
  color: var(--primary);
  border-color: transparent;
  text-decoration: none;
  box-shadow: none;
}

button[variant="link"]:hover {
  text-decoration: underline;
  text-underline-offset: 4px;
  background-color: transparent;
}

button[variant="link"]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px var(--ring);
}

button[size="sm"] {
  height: calc(var(--spacing-10) - var(--spacing-1) - var(--spacing-2));
  padding: calc(var(--spacing-2) - var(--spacing-1)) calc(var(--spacing-3) - var(--spacing-px) * 4);
}

button[size="lg"] {
  height: calc(var(--spacing-10) - var(--spacing-1) + var(--spacing-2));
  padding: calc(var(--spacing-2) + var(--radius-xxs)) var(--spacing-4);
}


/* ========================================= */
/* GAYA SPESIFIK: ATRIBUT [shape]       */
/* ========================================= */
button[shape="square"],
button[shape="circle"] {
  padding: 0;
  flex-shrink: 0;
}

button[shape="circle"] {
  border-radius: var(--radius-3xl);
}

button[size="sm"][shape="square"],
button[size="sm"][shape="circle"] {
  width: calc(var(--spacing-10) - var(--spacing-1) - var(--spacing-2));
  min-width: calc(var(--spacing-10) - var(--spacing-1) - var(--spacing-2));
  min-height: calc(var(--spacing-10) - var(--spacing-1) - var(--spacing-2));
}

button[size="md"][shape="square"],
button[size="md"][shape="circle"] {
  width: calc(var(--spacing-10) - var(--spacing-1));
  min-width: calc(var(--spacing-10) - var(--spacing-1));
  min-height: calc(var(--spacing-10) - var(--spacing-1));
}

button[size="lg"][shape="square"],
button[size="lg"][shape="circle"] {
  width: calc(var(--spacing-10) - var(--spacing-1) + var(--spacing-2));
  min-width: calc(var(--spacing-10) - var(--spacing-1) + var(--spacing-2));
  min-height: calc(var(--spacing-10) - var(--spacing-1) + var(--spacing-2));
}

button:not([size])[shape="square"],
button:not([size])[shape="circle"] {
  width: calc(var(--spacing-10) - var(--spacing-1));
  min-width: calc(var(--spacing-10) - var(--spacing-1));
  min-height: calc(var(--spacing-10) - var(--spacing-1));
}